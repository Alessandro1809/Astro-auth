---
import AuthLayout from "@/layouts/AuthLayout.astro";
const email =Astro.cookies.get('email')?.value ?? '';

const rememberMe= !!email;
---
<AuthLayout title="Login">
    <div class="flex justify-center self-center text-black z-10">
        <form class="p-12 bg-white mx-auto rounded-2xl w-100 ">
            <div class="mb-4">
              <h3 class="font-semibold text-2xl text-gray-800">Inicia Sesion </h3>
              <p class="text-gray-500">Por favor inicia sesion en tu cuenta.</p>
            </div>
            <div class="space-y-5">
                        <div class="space-y-2">
                              <label class="text-sm font-medium text-gray-700 tracking-wide">Email</label>
              <input name="email" class=" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400"  placeholder="mail@gmail.com" type="email"
              value={email}>
              </div>
                <div class="space-y-2">
              <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
                Contraseña
              </label>
              <input name="password" class="w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400" placeholder="Ingresa tu contraseña" type="password">
            </div>
            
              <div class="flex items-center justify-between">
              <div class="flex items-center">
                <input checked={rememberMe} id="remember_me" name="remember_me" type="checkbox" class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded">
                <label for="remember_me" class="ml-2 block text-sm text-gray-800">
                  Recuerdame
                </label>
              </div>
              
              <div class="text-sm mx-2">
                <a href="/register" class="text-green-400 hover:text-green-500">
                  No tienes una cuenta?
                </a>
              </div>
            </div>
            <div>
              <button id="btn-submit" type="submit" class="disabled:bg-gray-400 w-full flex justify-center bg-green-400  hover:bg-green-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
                Iniciar Sesion
              </button>
              <div class=" flex flex-1 w-full my-2">
                <div class="w-fulll border-t-2 border-gray-500">
                </div>
                <button id="btn-google" type="button" class="disabled:bg-gray-400 w-full flex justify-center bg-purple-400  hover:bg-purple-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
                  Iniciar con Google
                </button>
              </div>
            </div>
            </div>
          </form>
          <div class="pt-5 text-center text-gray-400 text-xs">
            <span>
              Copyright © 2021- {new Date().getFullYear()}
          </div>
      </div>
</AuthLayout>

<script>
import { actions } from "astro:actions";
import Swal from "sweetalert2";
import { GoogleAuthProvider, signInWithPopup } from "firebase/auth";
import { firebase } from "@/firebase/config";

  document.addEventListener("astro:page-load", () => {
    const form = document.querySelector("form") as HTMLFormElement;
    const btnSubmit = document.querySelector(
      "#btn-submit"
    ) as HTMLButtonElement;
    const btnGoogle = document.querySelector(
      "#btn-google"
    ) as HTMLButtonElement;

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      btnSubmit.setAttribute("disabled", "disabled");
      const formData = new FormData(form);
      const {data,error}= await actions.lolgIn(formData);
      if (error) {
        Swal.fire({
          icon: "error",
          title: "Credenciales incorrectas",
          text: error.message,
        });
        btnSubmit.removeAttribute("disabled");
        return;
      }

      window.location.replace("/protected");
    });

    btnGoogle.addEventListener("click", async (e) => {
      //desactivar el boton para evitar multiples clicks que afecten la app
      btnGoogle.setAttribute("disabled", "disabled");
      const provider = new GoogleAuthProvider();//Primero se debe de crear un provider
      try {
        //obtener las credenciales del lado del cliente
        const credentials= await signInWithPopup(firebase.auth,provider);//lleva como parametro el objeto de autenticacion y el provider
        
        //verifdicar las credenciales en el backend
        const {error} = await actions.logiWithGoogle(credentials);
        if (error) {
          Swal.fire({
            icon: "error",
            title: "Error en el proveedor",
            text: error.message,
          });
          btnGoogle.removeAttribute("disabled");
          return;
        }
        btnGoogle.innerText="Redireccionando...";
        window.location.replace("/protected");
      } catch (error) {
        console.log(error);
         btnGoogle.removeAttribute("disabled");
      }
      //desabilitar el boton
      btnGoogle.removeAttribute("disabled");
    });

  });


</script>